#!/bin/bash

# Source local helpers
source ./_common.sh

# Source app helpers
source /usr/share/yunohost/helpers

# Abort script if errors
ynh_abort_if_errors

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path=$YNH_APP_ARG_PATH
language=$YNH_APP_ARG_LANGUAGE

# Set app specific variables
app=$YNH_APP_INSTANCE_NAME
dbname=$app
dbuser=$app

# Check web path availability
ynh_webpath_available "$domain" "$path"
# Register (book) web path
ynh_webpath_register "$app" "$domain" "$path"

# Set and store language
language=${LANGUAGES[$3]}
ynh_app_setting_set "$app" language "$language"

# Define LOGDIR (create it later when user is created)
LOGDIR=/var/log/$app

# Check destination directory
DESTDIR="/var/www/${app}"
[[ -d "$DESTDIR" ]] && ynh_die \
"The destination directory '${DESTDIR}' already exists.\
 You should safely delete it before installing this app."

# Check whether Baïkal or Radicale is installed
if yunohost app list --installed -f baikal | grep -q id ; then
    caldav_app="baikal"
    caldav_baseurl="/cal.php/"
elif yunohost app list --installed -f radicale | grep -q id ; then
    caldav_app="radicale"
    caldav_baseurl="/"
else
    ynh_die "You must install Baïkal or Radicale before"
fi

# Install dependencies
ynh_package_is_installed "php5-cli" \
  || ynh_package_install "php5-cli"

# Create tmp directory and fetch app inside
TMPDIR=$(mktemp -d)
extract_agendav "$TMPDIR"

# Generate random password and encryption key
dbpass=$(ynh_string_random)
encryptkey=$(ynh_string_random 24)
ynh_app_setting_set "$app" encryptkey "$encryptkey"
ynh_app_setting_set "$app" mysqlpwd "$dbpass"

# Copy and set AgenDAV configuration
conf_path="${TMPDIR}/web/config/settings.php"
cp ../conf/settings.php "$conf_path"
sed -i "s/{DBUSER}/${dbuser}/g"              "$conf_path"
sed -i "s/{DBPASS}/${dbpass}/g"              "$conf_path"
sed -i "s/{DBNAME}/${dbname}/g"              "$conf_path"
sed -i "s/{ENCRYPTKEY}/${encryptkey}/g"      "$conf_path"
sed -i "s@{LOGDIR}@${LOGDIR}@g"              "$conf_path"
sed -i "s@{TIMEZONE}@$(cat /etc/timezone)@g" "$conf_path"
sed -i "s@{LANGUAGE}@${language}@g"          "$conf_path"

# CalDAV config
caldav_domain=$(ynh_app_setting_get "$caldav_app" domain)
caldav_path=$(ynh_app_setting_get "$caldav_app" path)
caldav_url="https://${caldav_domain}${caldav_path%/}"
sed -i "s@{CALDAV_BASEURL}@${caldav_url}${caldav_baseurl}@g" "$conf_path"
sed -i "s@{CALDAV_DOMAIN}@${caldav_domain}@g"                "$conf_path"

# Install files and set permissions
mv "$TMPDIR" "$DESTDIR"

useradd -c "$app system account" \
  -d /var/www/$app --system --user-group $app --shell /usr/sbin/nologin \
  || ynh_die "Unable to create $app system account"

# Protect source code against modifications
find "${DESTDIR}" -type f -exec chown root:root {} \; -exec chmod 644 {} \;
find "${DESTDIR}" -type d -exec chown root:root {} \; -exec chmod 755 {} \;

# Only agendav user should write here
chown -hR $app: "${DESTDIR}/web/var/cache/"{profiler,twig}
chmod -R 750 "${DESTDIR}/web/var/cache/"{profiler,twig}

# The agendav user should read here, but does not need to write
# Other users should not be able to read as it stores passwords.
find "${DESTDIR}/web/config" -type f -exec chown root:$app {} \; -exec chmod 640 {} \;
find "${DESTDIR}/web/config" -type d -exec chown root:$app {} \; -exec chmod 750 {} \;

# Create log directory
install -m 750 -o $app -g adm -d "$LOGDIR"

# Initialize database
ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
(cd "$DESTDIR" && -u $app \
    php agendavcli migrations:migrate --no-interaction) \
  || ynh_die "Unable to create AgenDAV tables"

# Copy and set nginx configuration
nginx_conf="/etc/nginx/conf.d/${domain}.d/${app}.conf"
sed -i "s@{PATH}@${path}@g"        ../conf/nginx.conf
sed -i "s@{LOCATION}@${path:-/}@g" ../conf/nginx.conf
sed -i "s@{DESTDIR}@${DESTDIR}@g"  ../conf/nginx.conf
sed -i "s@{POOLNAME}@${app}@g"     ../conf/nginx.conf
# comment redirection in case of an installation at root
[[ -n "$path" ]] || sed -i '$s/^/#/' ../conf/nginx.conf
cp ../conf/nginx.conf "$nginx_conf"

# Copy and set php-fpm configuration
phpfpm_conf="/etc/php5/fpm/pool.d/${app}.conf"
sed -i "s@{POOLNAME}@${app}@g"     ../conf/php-fpm.conf
sed -i "s@{DESTDIR}@${DESTDIR}/@g" ../conf/php-fpm.conf
sed -i "s@{USER}@${app}@g"     ../conf/php-fpm.conf
sed -i "s@{GROUP}@${app}@g"     ../conf/php-fpm.conf
cp ../conf/php-fpm.conf "$phpfpm_conf"

# Reload services
service php5-fpm restart
service nginx reload
