#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
language=$YNH_APP_ARG_LANGUAGE

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

agendav_app_check_installation() {
	echo $(yunohost app list | grep "id: $1")
}

# Check whether Baïkal or Radicale is installed
baikal_install=$(agendav_app_check_installation "baikal")
radicale_install=$(agendav_app_check_installation "radicale")
if [ -n "$baikal_install" ]
then
    caldav_app=baikal
    caldav_baseurl="/cal.php/"
elif [ -n "$radicale_install" ]
then
    caldav_app=radicale
    caldav_baseurl=/
else
    ynh_die --message="Please install Baïkal or Radicale before AgenDAV."
fi

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=language --value=$language

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..."

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=2

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=2

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=4

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=3

# Copy and set NGINX configuration
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#================================================
ynh_script_progression --message="Configuring PHP-FPM.." --weight=2

# Copy and set PHP-FPM configuration
ynh_add_fpm_config
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE SETTINGS.PHP
#=================================================
ynh_script_progression --message="Configuring AgenDAV..." --weight=2

# Generate random encryption key
encryptkey=$(ynh_string_random --length=24)
ynh_app_setting_set --app=$app --key=encryptkey --value="$encryptkey"

# Copy and set AgenDAV configuration
timezone=$(cat /etc/timezone)

caldav_url="https://${domain}${path%/}"

dir=__DIR__

ynh_add_config --template="../conf/settings.php" --destination="$final_path/web/config/settings.php"

chmod 400 "$final_path/web/config/settings.php"
chown $app:$app "$final_path/web/config/settings.php"

#=================================================
# RUN DATABASE MIGRATIONS (INCLUDES INITIALIZATION)
#=================================================
ynh_script_progression --message="Initialising AgenDAV..." --weight=3

(
	cd $final_path
	php${phpversion} agendavcli migrations:migrate --no-interaction
)

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..."

logdir=/var/log/$app
mkdir -p $logdir
chown -R $app: $logdir

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

chown -R root: $final_path

# Only AgenDav user should write here
chown -R $app ${final_path}/web/var/cache/{profiler,twig}

# The AgenDav user should read here, but does not need to write
# Other users should not be able to read as it stores passwords.
chown -R root:$app ${final_path}/web/config/
chmod -R 750 ${final_path}/web/config/

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
